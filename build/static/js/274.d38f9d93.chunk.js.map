{"version":3,"file":"static/js/274.d38f9d93.chunk.js","mappings":"mRA0FA,EAhFmB,WAEf,OAAoCA,EAAAA,EAAAA,UAAS,IAAG,eAAzCC,EAAU,KAAEC,EAAa,KAChC,GAA4CF,EAAAA,EAAAA,WAAS,GAAM,eAApDG,EAAc,KAAEC,EAAiB,KACxC,GAA4BJ,EAAAA,EAAAA,UAAS,KAAI,eAAlCK,EAAM,KAAEC,EAAS,KACxB,GAAsCN,EAAAA,EAAAA,WAAS,GAAM,eAA9CO,EAAW,KAAEC,EAAc,KAElC,GAAuCC,EAAAA,EAAAA,IAAkB,GAAlDC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAY,EAAZA,cAEvBC,EAAAA,EAAAA,YAAU,WACNC,EAAUT,GAAQ,EACtB,GAAG,IAGH,IAAMS,EAAY,SAACT,EAAQU,GACbX,GAAVW,GACAH,EAAaP,GACZW,KAAKC,EACV,EAEMA,EAAqB,SAACC,GACxB,IAAIC,GAAQ,EAETD,EAAcE,OAAS,IACtBD,GAAQ,GAERjB,GAAc,SAAAD,GAAU,wBAAQA,IAAU,OAAKiB,GAAa,IAC5Dd,GAAkB,GAClBE,GAAU,SAAAD,GAAM,OAAIA,EAAS,CAAC,IAC9BG,EAAeW,EACvB,EAEME,EAAQpB,EAAWqB,KAAI,SAAAC,GACzB,IAAIC,EAAW,CAAC,UAAc,SAI9B,MAHuB,wEAAnBD,EAAME,YACND,EAAW,CAAC,UAAc,kBAG1B,SAACE,EAAA,EAAa,CAEVC,QAAS,IACTC,IAAE,EACFC,WAAW,oBAAmB,UAE9B,UAAC,KAAI,CACDC,GAAE,kBAAaP,EAAMQ,IACrBC,SAAU,EACVC,UAAU,oBAAmB,WAC7B,gBAAKA,UAAU,mBAAkB,UAC7B,gBAAKA,UAAU,mBAAmBC,IAAKX,EAAME,UAAWU,IAAKZ,EAAMa,MAAOC,MAAOb,OAErF,gBAAKS,UAAU,qBAAoB,SAAEV,EAAMa,SAC3C,iBAAKH,UAAU,qBAAoB,UAAEV,EAAMe,MAAM,WAbhDf,EAAMQ,GAiBvB,IAEMQ,EAAe5B,GAAQ,SAAC6B,EAAA,EAAY,IAAK,KACzCC,EAAU/B,IAAYP,GAAiB,SAACuC,EAAA,EAAO,IAAK,KAE1D,OACI,qBAAST,UAAU,cAAa,UAC3BM,EACAE,GACD,SAACE,EAAA,EAAe,CAACC,UAAW,KAAK,UAC7B,eAAIX,UAAU,oBAAmB,SAC5BZ,OAGT,mBACIY,UAAU,gCACVI,MAAO,CAACQ,QAAStC,EAAa,OAAS,SACvCuC,SAAU3C,EACV4C,QAAS,kBAAMjC,EAAUT,EAAO,EAAC,SACpC,gBAGb,EChEA,EAnBmB,WAEf,OACI,iCACE,UAAC2C,EAAA,EAAM,YACL,iBACEC,KAAK,cACLC,QAAQ,kCAEV,2BAAO,2BAER,SAACC,EAAA,EAAS,KACT,oBAASlB,UAAU,SAAQ,UACzB,SAAC,EAAU,QAIzB,C","sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react'\r\nimport useMarvelServices from '../../services/MarvelServices';\r\nimport Spinner from \"../UI/Spinner\"\r\nimport ErrorMessage from '../UI/ErrorMessage'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport './ComicsList.sass'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nconst ComicsList = () => {\r\n    \r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(210);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n   \r\n    const {loading, error, getAllComics} = useMarvelServices(true);\r\n    \r\n    useEffect(()=> {\r\n        onRequest(offset, true)\r\n    }, [])\r\n\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllComics(offset)\r\n        .then(onComicsListLoaded);\r\n    }\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n\r\n        if(newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n            setComicsList(comicsList => [...comicsList, ...newComicsList]);\r\n            setNewItemLoading(false);\r\n            setOffset(offset => offset + 8);\r\n            setComicsEnded(ended);\r\n    }\r\n\r\n    const cards = comicsList.map(comic=> {\r\n        let imgStyle = {'objectFit' : 'cover'}\r\n        if (comic.thumbnail ==='http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n            imgStyle = {'objectFit' : '—Åontain'};\r\n        }\r\n        return(\r\n            <CSSTransition \r\n                key={comic.id} \r\n                timeout={500} \r\n                in\r\n                classNames=\"comics-list__card\"\r\n            >\r\n                <Link\r\n                    to={`/comics/${comic.id}`}\r\n                    tabIndex={0}\r\n                    className=\"comics-list__card\">\r\n                    <div className=\"comics-list__img\">\r\n                        <img className=\"comics-list__img\" src={comic.thumbnail} alt={comic.title} style={imgStyle} />\r\n                    </div>\r\n                    <div className=\"comics-list__title\">{comic.title}</div>\r\n                    <div className=\"comics-list__price\">{comic.price}$</div>\r\n                </Link>\r\n            </CSSTransition>\r\n        )\r\n    })\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n    return(\r\n        <section className='comics-list'>\r\n            {errorMessage}\r\n            {spinner}\r\n            <TransitionGroup component={null}>\r\n                <ul className=\"comics-list__wrap\">\r\n                    {cards}\r\n                </ul>\r\n            </TransitionGroup>\r\n            <button \r\n                className=\"btn btn_red btn_long btn_main\"\r\n                style={{display: comicsEnded? 'none' : 'block'}}\r\n                disabled={newItemLoading}\r\n                onClick={() => onRequest(offset)} \r\n            >LOAD MORE</button>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import { useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport AppBanner from '../appBanner/AppBanner';\r\nimport ComicsList from '../comicsList/ComicsList';\r\n\r\nconst ComicsPage = () => {\r\n\r\n    return (\r\n        <>\r\n          <Helmet>\r\n            <meta\r\n              name=\"description\"\r\n              content=\"Page with list of our comics\"\r\n            />\r\n            <title>Marvel comics page</title>\r\n          </Helmet>\r\n           <AppBanner/>\r\n            <section className=\"comics\">\r\n              <ComicsList />\r\n            </section> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default ComicsPage;"],"names":["useState","comicsList","setComicsList","newItemLoading","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelServices","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","cards","map","comic","imgStyle","thumbnail","CSSTransition","timeout","in","classNames","to","id","tabIndex","className","src","alt","title","style","price","errorMessage","ErrorMessage","spinner","Spinner","TransitionGroup","component","display","disabled","onClick","Helmet","name","content","AppBanner"],"sourceRoot":""}