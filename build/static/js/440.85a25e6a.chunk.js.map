{"version":3,"file":"static/js/440.85a25e6a.chunk.js","mappings":"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","sources":["components/UI/ErrorMessage.js","components/UI/Spinner.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/errorBoundary/ErrorBoundary.js","components/skeleton/Skeleton.js","components/charSidePanel/CharSidePanel.js","components/charSearch/CharSearch.js","components/charsSearch/CharsSearchResult.js","components/charsSearch/CharsSearch.js","components/pages/MainPage.js","services/MarvelServices.js","hooks/http.hook.js"],"sourcesContent":["import img from '../../resources/img/error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import { useState, useEffect } from 'react';\r\nimport useMarvelServices from '../../services/MarvelServices';\r\nimport Spinner from \"../UI/Spinner\"\r\nimport ErrorMessage from '../UI/ErrorMessage'\r\n\r\nimport './RandomChar.sass'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nconst  RandomChar = () => {\r\n\r\n    const [char, setChar] = useState({});\r\n    const {error, getCharacter, loading, clearError} = useMarvelServices();\r\n    \r\n    useEffect(()=> {\r\n        updateChar()\r\n    }, [])\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n    \r\n\r\n    const updateChar = () => {\r\n        clearError()\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n        getCharacter(id)\r\n            .then(onCharLoaded);\r\n    }\r\n\r\n \r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error) ? <View char={char}/> : null;\r\n    return(\r\n        <TransitionGroup component={null}>\r\n            <section className='random-char'>\r\n                    {errorMessage}\r\n                    {spinner}\r\n                    {content}\r\n                <div className=\"random-char__new\">\r\n                    <p className=\"random-char__text\">\r\n                        Random character for today!\r\n                        Do you want to get to know him better?\r\n                        <br /> <br />\r\n                        Or choose another one\r\n                    </p>\r\n                    <button onClick={updateChar} className='btn btn_red btn_dark-bg'>TRY IT</button>\r\n                </div>\r\n            </section>\r\n        </TransitionGroup>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    let {name, description, thumbnail, homepage, wiki} = char;\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n    \r\n    return (\r\n        <CSSTransition key={name} timeout={500} in classNames={'random-char__about'}>\r\n            <div className=\"random-char__about\">\r\n                <div  className=\"random-char__img\">\r\n                    <img src={thumbnail} alt={name} style={imgStyle}/>\r\n                </div>\r\n                <div className=\"random-char__info\">\r\n                    <div className=\"random-char__name\">{name}</div>\r\n                    <p className=\"random-char__descr\">\r\n                        {description}\r\n                    </p>\r\n                    <div className=\"random-char__btns\">\r\n                        <a href={homepage} className='btn btn_red' rel=\"noreferrer\" target='_blank'>HOMEPAGE</a>\r\n                        <a href={wiki} className='btn btn_gray' rel=\"noreferrer\" target='_blank'>WIKI</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import { useEffect, useState, useRef } from 'react'\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport PropTypes from 'prop-types'; \r\n\r\nimport Spinner from \"../UI/Spinner\"\r\nimport ErrorMessage from '../UI/ErrorMessage'\r\nimport useMarvelServices from '../../services/MarvelServices';\r\nimport './CharList.sass'\r\n\r\nfunction CharList(props) {\r\n\r\n    const [charList, setCharList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(210);\r\n    const [charEnded, setCharEnded] = useState(false);\r\n   \r\n    const {loading , error, getAllCharacters} = useMarvelServices();\r\n    \r\n    useEffect(()=> {\r\n        onRequest(offset, true)\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n\r\n        getAllCharacters(offset)\r\n        .then(onCharListLoaded);\r\n    }\r\n    \r\n    const onCharListLoaded = (newCharList) => {\r\n        let ended = false;\r\n\r\n        if(newCharList.length < 9) {\r\n            ended = true;\r\n        }\r\n            setCharList(charList => [...charList, ...newCharList]);\r\n            setNewItemLoading(false);\r\n            setOffset(offset => offset + 9);\r\n            setCharEnded(ended);\r\n    }\r\n\r\n    const itemRefs = useRef([]);\r\n\r\n    const focusOnItem = (id) => {\r\n        itemRefs.current.forEach(item => item.classList.remove('char-list__card_selected'));\r\n        itemRefs.current[id].classList.add('char-list__card_selected');\r\n        itemRefs.current[id].focus();\r\n    }\r\n\r\n    function renderItems (arr) {\r\n        const items = arr.map((item, i) => {\r\n            let imgStyle = {'objectFit' : 'cover'}\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {'objectFit' : 'unset'};\r\n            } else if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif') {\r\n                imgStyle = {'objectFit' : 'contain'};\r\n            }\r\n            return(\r\n                <CSSTransition \r\n                    key={item.id} \r\n                    timeout={500} \r\n                    in\r\n                    classNames=\"char-list__card\"\r\n                >\r\n                    <li className=\"char-list__card\"\r\n                        ref={el => itemRefs.current[i] = el}\r\n                        tabIndex={0}\r\n                        // key={item.id}\r\n                        onKeyDown={(e) => {\r\n                            if (e.key === ' ' || e.key === \"Enter\") {\r\n                                e.preventDefault()\r\n                                props.onCharSelected(item.id);\r\n                                focusOnItem(i);\r\n                            }\r\n                        }}\r\n                        onClick={() => {\r\n                            props.onCharSelected(item.id)\r\n                            focusOnItem(i);\r\n                        }}    \r\n                    >\r\n                        <div className=\"char-list__img\">\r\n                            <img src={item.thumbnail} alt={item.name} style={imgStyle} />\r\n                        </div>\r\n                        <div className=\"char-list__name\">{item.name}</div>\r\n                    </li>\r\n                </CSSTransition>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <TransitionGroup component={null}>\r\n                <ul className=\"char-list__wrap\">\r\n                    {items}\r\n                </ul>\r\n            </TransitionGroup>\r\n        )\r\n    }\r\n        \r\n    const items = renderItems(charList);\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n    console.log('Render')\r\n\r\n    return (\r\n        <section className='char-list bg-decoration'>\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button \r\n                className=\"btn btn_red btn_long btn_main\"\r\n                style={{display: charEnded? 'none' : 'block'}}\r\n                disabled={newItemLoading}\r\n                onClick={() => onRequest(offset)} \r\n            >\r\n                LOAD MORE\r\n            </button>\r\n        </section>\r\n    )\r\n}\r\n\r\nCharList.propTypes = {\r\n    onCharSelected: PropTypes.func\r\n}\r\n\r\nexport default CharList;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../UI/ErrorMessage\";\r\n\r\nexport default class ErrorBoundary extends Component {\r\n\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch = (error, errorInfo) => {\r\n        this.setState({\r\n            error: true\r\n        })\r\n\r\n        console.log(error, errorInfo)\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage />\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}","import './Skeleton.sass'\r\n\r\nexport default function Skeleton() {\r\n    return(\r\n        <nav className=\"skeleton\">\r\n            <h2 className=\"skeleton__title\">Please select a character to see information</h2>\r\n            <div className=\"skeleton__wrap pulse\">\r\n                <div className=\"skeleton__cyrcle\"></div>\r\n                <div className=\"skeleton__line\"></div>\r\n                <div className=\"skeleton__line\"></div>\r\n                <div className=\"skeleton__line\"></div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport Spinner from \"../UI/Spinner\"\r\nimport ErrorMessage from '../UI/ErrorMessage'\r\nimport useMarvelServices from '../../services/MarvelServices';\r\nimport Skeleton from '../skeleton/Skeleton';\r\n\r\nimport './CharSidePanel.sass'\r\nimport { CSSTransition, SwitchTransition } from 'react-transition-group';\r\n\r\nconst CharSidePanel = (props) => {\r\n\r\n    const [char, setChar] = useState(null)\r\n\r\n    const {error, getCharacter, loading, clearError} = useMarvelServices();\r\n\r\n    useEffect(() => {\r\n        updateChar()\r\n    }, [props.charId])\r\n\r\n    useEffect(() => {\r\n        updateChar()\r\n    }, [])\r\n\r\n    const updateChar = () => {\r\n        const {charId} = props;\r\n        if (!charId) {\r\n            return;\r\n        }\r\n        \r\n        clearError()\r\n        getCharacter(charId)\r\n            .then(onCharLoaded);\r\n    }\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char)\r\n    }\r\n\r\n    const skeleton = char || loading || error ? null : <Skeleton/>;\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n    return(\r\n        <SwitchTransition component={null}>\r\n            <CSSTransition key={props.charId} timeout={600} in classNames={'char-side-panel'} unmountOnExit>\r\n                <section className='char-side-panel'>\r\n                    {skeleton}\r\n                    {errorMessage}\r\n                    {spinner}\r\n                    {content}\r\n                </section>\r\n            </CSSTransition>\r\n        </SwitchTransition>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    \r\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\r\n\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    \r\n    if (\r\n        thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' \r\n        || thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif'\r\n        ) {\r\n            imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n\r\n    return (\r\n        <>\r\n                <div className=\"char-side-panel__wrap\">\r\n                <div  className=\"char-side-panel__img\">\r\n                    <img src={thumbnail} alt={name} style={imgStyle} />\r\n                </div>\r\n                <div className=\"char-side-panel__info\">\r\n                    <div className=\"random-char__name\">{name}</div>\r\n                    <div className=\"char-side-panel__btns\">\r\n                        <a href={homepage} rel=\"noreferrer\" target='_blank' className='btn btn_red'>HOMEPAGE</a>\r\n                        <a href={wiki} rel=\"noreferrer\" target='_blank' className='btn btn_gray'>WIKI</a>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <p className=\"random-char__descr char-side-panel__descr\">{description}</p>\r\n                <div className=\"char-side-panel__comics-title\">Comics:</div>\r\n                <ul className=\"char-side-panel__comics-list\">\r\n                    {comics.length > 0 ? null : 'There is no comics with this character'}\r\n                    {comics.map((item, i) =>{ \r\n                        // eslint-disable-next-line\r\n                        if (i > 9) return;\r\n                        return (\r\n                            <li key={i} className=\"char-side-panel__comics-item\"><Link to={`comics/${item.resourceURI.substr(43)}`} className='char-side__link'>{item.name}</Link></li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nCharSidePanel.propTypes = {\r\n    charId: PropTypes.number,\r\n}\r\n\r\nexport default CharSidePanel;","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport  { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport useMarvelServices from '../../services/MarvelServices';\r\nimport './charSearch.sass'\r\nimport ErrorMessage from '../UI/ErrorMessage';\r\n\r\nexport default function CharSearch() {\r\n\r\n    const [char, setChar] = useState(null);\r\n    const {error, getCharacterByName, loading, clearError} = useMarvelServices();\r\n\r\n    const onCharLoaded = (charName) => {\r\n        setChar(charName)\r\n        console.log(charName)\r\n    }\r\n    \r\n    const updateChar = (charName) => {\r\n        clearError();\r\n\r\n        getCharacterByName(charName)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage style={{marginTop: 10}} /> : null \r\n   \r\n    const result = !char ? null : char.id ?\r\n        <div className='modal__success'>\r\n            <h3 className='modal__success-text'>There is {char.name}! Visit page?</h3>\r\n            <Link to={`/char/${char.id}`} className='btn btn_gray' disabled={loading}>TO PAGE</Link>\r\n        </div>  \r\n        :\r\n        <div className='modal__error'>\r\n            The character was not found. Check the name and try again\r\n        </div>\r\n\r\n    return(\r\n        <div className='modal'>\r\n            <Formik\r\n                initialValues={{\r\n                    charName: ''\r\n                }}\r\n                validationSchema = {Yup.object({\r\n                    charName: Yup.string().required('This field is required')\r\n                })}\r\n                onSubmit = { ({charName}) => {\r\n                    updateChar(charName)\r\n                }} >\r\n                <Form onChange={e => !e.target.value ? setChar(null) : null}>\r\n                    <label htmlFor='charName' className='modal__title'>Or find a character by name:</label>\r\n                    <div className='modal__form'>\r\n                        <Field id='charName' type='text' name='charName' placeholder='Enter name'/>\r\n                        <button type='submit' className=\"btn btn_red\">FIND</button>\r\n                    </div>\r\n                   <FormikErrorMessage className='modal__error' name='charName' component={'h3'} />\r\n                </Form>\r\n            </Formik>\r\n            {errorMessage}\r\n            {result}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CharsSearchResult = ({char, charName}) => {\r\n    let {name, thumbnail, id} = char;\r\n    const visibleName = <p><span>{name.slice(0, charName.length)}</span>{name.slice(charName.length)}</p>\r\n    return (\r\n        <div className='results__item'>\r\n            <img className='results__img' src={thumbnail} alt={name} />\r\n            <Link to={`/char/${id}`}>{visibleName}</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CharsSearchResult;","import React, { useEffect, useState, useRef } from 'react';\r\nimport useMarvelServices from '../../services/MarvelServices';\r\n\r\nimport './charsSearch.sass'\r\nimport CharsSearchResult from './CharsSearchResult';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CharsSearch = () => {\r\n    const [charName, setCharName] = useState('')\r\n    const [chars, setChar] = useState([])\r\n    const [overlay, setOverlay] = useState(false)\r\n    const ref = useRef()\r\n\r\n    const {error, getAllCharactersByName, loading, clearError} = useMarvelServices();\r\n\r\n    const onCharLoaded = (charName) => {\r\n        setChar(charName)\r\n        console.log(charName)\r\n    }\r\n\r\n    useEffect(()=> {\r\n        updateChar(charName)\r\n    }, [charName])\r\n    \r\n    const updateChar = (charName) => {\r\n\r\n        if(!charName) return\r\n        clearError();\r\n\r\n        getAllCharactersByName(charName)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n    const hideOverlay = () => {\r\n        setOverlay(false)\r\n        setCharName('')\r\n        setChar([])\r\n        ref.current.value = ''\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { overlay ? <div className='overlay' onClick={hideOverlay}/> : null}\r\n            <div className='search'>\r\n                <form onFocus={()=> setOverlay(true)}>\r\n                    <input \r\n                        ref={ref} \r\n                        autocomplete=\"off\" \r\n                        defaultValue={''} \r\n                        onChange={(e) => setCharName(e.target.value)}\r\n                        id={'CharName'} \r\n                        name={'charName'} \r\n                        placeholder={'Find a character by name:'}\r\n                    />\r\n                </form>\r\n                {loading ? <h3 className='results__loading'>loading...</h3> : null}\r\n                {chars.length > 0 && charName && !error && !loading ? \r\n                    <div className='results'>\r\n                        {chars.map(char => \r\n                            <CharsSearchResult char={char} charName={charName}/>\r\n                        )}\r\n                    </div>\r\n                    : null\r\n                }\r\n                {\r\n                    chars.length === 0 && charName && !error && !loading ? \r\n                    <h3 className='results__loading'>The character was not found</h3>\r\n                    : null\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CharsSearch;","import {useState} from 'react';\r\nimport RandomChar from '../randomChar/RandomChar';\r\nimport CharList from '../charList/CharList';\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\nimport CharSidePanel from '../charSidePanel/CharSidePanel';\r\nimport CharSearch from '../charSearch/CharSearch';\r\nimport { Helmet } from 'react-helmet';\r\nimport CharsSearch from '../charsSearch/CharsSearch';\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected =(id) => {\r\n        setChar(id)\r\n    }\r\n    return (\r\n        <>\r\n          <Helmet>\r\n            <meta\r\n              name=\"description\"\r\n              content=\"Marvel information portal\"\r\n            />\r\n            <title>Marvel information portal</title>\r\n          </Helmet>\r\n          <RandomChar/>\r\n          <CharsSearch/>\r\n          <section className=\"main\">\r\n            <CharList onCharSelected={onCharSelected}/>\r\n            <div>\r\n              <ErrorBoundary>\r\n                <CharSidePanel charId={selectedChar}/>\r\n              </ErrorBoundary>\r\n              <ErrorBoundary>\r\n                <CharSearch/>\r\n              </ErrorBoundary>\r\n            </div>\r\n          </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainPage;","import useHttp from \"../hooks/http.hook\";\r\n\r\nconst useMarvelServices = () => {\r\n\r\n    const {request, error, loading, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=2c51130201c635f3787177f358c697e1';\r\n    const _charOffset = 210;\r\n    const _comicOffset = 0;\r\n\r\n    const getAllCharacters = async (offset = _charOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    };\r\n\r\n    const getAllComics = async (offset = _comicOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComic);\r\n    };\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    };\r\n\r\n    const getCharacterByName = async (name = '') => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&limit=1&${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    };\r\n\r\n    const getAllCharactersByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?nameStartsWith=${name}&limit=10&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    };\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComic(res.data.results[0]);\r\n    };\r\n\r\n    const _transformCharacter = (char) => {\r\n        if (!char) return {}\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComic = (comic) => {\r\n        return {\r\n            id: comic.id,\r\n            title: comic.title,\r\n            description: comic.description ? `${comic.description.slice(0, 210)}...` : 'There is no description for this comic',\r\n            thumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\r\n            price: comic.prices[0].price,\r\n            language: comic.textObjects.language || 'en-us',\r\n            pages: comic.pageCount\r\n        }\r\n    }\r\n\r\n    return {loading, error, clearError, getAllCharacters, \r\n            getAllComics, getCharacter, getComic, getCharacterByName, \r\n            getAllCharactersByName}\r\n};\r\n\r\nexport default useMarvelServices;","import { useState, useCallback } from \"react\";\r\n\r\nexport default function useHttp() {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback( async (\r\n        url, \r\n        method = 'GET', \r\n        body = null, \r\n        headers = {'Content-Type': 'aplication/json'}\r\n        ) => {\r\n            setLoading(true);\r\n\r\n            try {\r\n                const response = await fetch(url, {method, body, headers});\r\n\r\n                if (!response.ok) throw new Error(`Could not fetch ${url}, status ${response.status}`);\r\n\r\n                const data = await response.json();\r\n                setLoading(false);\r\n\r\n                return data;\r\n\r\n            } catch(e) {\r\n                setLoading(false);\r\n                setError(e.message);\r\n                console.log('ssssssss')\r\n                throw e;\r\n            }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return {\r\n        loading, \r\n        error, \r\n        request, \r\n        clearError\r\n    }\r\n}"],"names":["style","display","width","height","objectFit","margin","src","img","alt","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","View","char","name","description","thumbnail","homepage","wiki","imgStyle","CSSTransition","timeout","in","classNames","className","href","rel","target","useState","setChar","useMarvelServices","error","getCharacter","loading","clearError","useEffect","updateChar","onCharLoaded","id","Math","floor","random","then","errorMessage","ErrorMessage","spinner","Spinner","content","TransitionGroup","component","onClick","props","charList","setCharList","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","getAllCharacters","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","items","arr","map","i","ref","el","tabIndex","onKeyDown","e","key","preventDefault","onCharSelected","renderItems","console","log","disabled","ErrorBoundary","state","componentDidCatch","errorInfo","setState","this","children","Component","Skeleton","comics","to","resourceURI","substr","charId","skeleton","SwitchTransition","unmountOnExit","CharSearch","getCharacterByName","charName","marginTop","result","initialValues","validationSchema","Yup","required","onSubmit","onChange","value","htmlFor","placeholder","visibleName","slice","setCharName","chars","overlay","setOverlay","getAllCharactersByName","onFocus","autocomplete","defaultValue","selectedChar","Helmet","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","useHttp","_apiBase","_apiKey","_charOffset","_comicOffset","res","results","_transformCharacter","getAllComics","_transformComic","getComic","path","extension","urls","comic","title","price","prices","language","textObjects","pages","pageCount"],"sourceRoot":""}